{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Faraday Cli \u00b6 Use Faraday directly from your favorite terminal. faraday-cli is the official client that make automating your security workflows, easier. Examples \u00b6 Here you have some snippets of different workflows you can generate using faraday-cli One-line Continuous Scan \u00b6 Scan assets from workspace. $ faraday-cli host list -ip | nmap -iL - -oX /tmp/nmap.xml && faraday-cli tool report -w other_ws /tmp/nmap.xml Scan your subdomains \u00b6 Use a tool like assetfinder to do a domains lookup, scan them with nmap and send de results to faraday $ assetfinder -subs-only example.com | sort | uniq | awk 'BEGIN { ORS = \"\"; print \" {\\\"target\\\":\\\"\"} { printf \"%s%s\", separator, $1, $2 separator = \",\"}END { print \"\\\"}\" }' | faraday-cli agent run -a 1 -e nmap --stdin Send Faraday Executive Reports by mail \u00b6 Run a dalily scan and send your report $ faraday-cli executive_report create -t \\' \"generic_default.docx (generic) (Word)\" \\' --confirmed -o /tmp/report.docx && echo \"Faraday Daily Report\" | mail -s \"Daily Report\" user@example.com -A /tmp/report.docx Load your assets from your cloud provider \u00b6 Here you can list your assets using a cli from your provider (in this example Digital Ocean), then generate a json with that information and use faraday-cli to send it to faraday. $ doctl compute droplet list --format PublicIPv4,Name --no-header | awk 'BEGIN { ORS = \"\"; print \" [\"} { printf \"%s{\\\"ip\\\": \\\"%s\\\", \\\"description\\\": \\\"%s\\\"}\", separator, $1, $2 separator = \", \"}END { print \"] \" }' | faraday-cli host create --stdin","title":"Home"},{"location":"#faraday-cli","text":"Use Faraday directly from your favorite terminal. faraday-cli is the official client that make automating your security workflows, easier.","title":"Faraday Cli"},{"location":"#examples","text":"Here you have some snippets of different workflows you can generate using faraday-cli","title":"Examples"},{"location":"#one-line-continuous-scan","text":"Scan assets from workspace. $ faraday-cli host list -ip | nmap -iL - -oX /tmp/nmap.xml && faraday-cli tool report -w other_ws /tmp/nmap.xml","title":"One-line Continuous Scan"},{"location":"#scan-your-subdomains","text":"Use a tool like assetfinder to do a domains lookup, scan them with nmap and send de results to faraday $ assetfinder -subs-only example.com | sort | uniq | awk 'BEGIN { ORS = \"\"; print \" {\\\"target\\\":\\\"\"} { printf \"%s%s\", separator, $1, $2 separator = \",\"}END { print \"\\\"}\" }' | faraday-cli agent run -a 1 -e nmap --stdin","title":"Scan your subdomains"},{"location":"#send-faraday-executive-reports-by-mail","text":"Run a dalily scan and send your report $ faraday-cli executive_report create -t \\' \"generic_default.docx (generic) (Word)\" \\' --confirmed -o /tmp/report.docx && echo \"Faraday Daily Report\" | mail -s \"Daily Report\" user@example.com -A /tmp/report.docx","title":"Send Faraday Executive Reports by mail"},{"location":"#load-your-assets-from-your-cloud-provider","text":"Here you can list your assets using a cli from your provider (in this example Digital Ocean), then generate a json with that information and use faraday-cli to send it to faraday. $ doctl compute droplet list --format PublicIPv4,Name --no-header | awk 'BEGIN { ORS = \"\"; print \" [\"} { printf \"%s{\\\"ip\\\": \\\"%s\\\", \\\"description\\\": \\\"%s\\\"}\", separator, $1, $2 separator = \", \"}END { print \"] \" }' | faraday-cli host create --stdin","title":"Load your assets from your cloud provider"},{"location":"commands/","text":"Commands \u00b6 Authentication \u00b6 auth \u00b6 Authenticate with your faraday server. $ faraday-cli auth Faraday url [http://localhost:5985]: http://localhost:5985 User: faraday Password: Saving config \u2714 Authenticated with faraday: http://localhost:5985 Optional arguments: Syntax Description -f/--faraday-url FARADAY_URL url of your faraday server -i/--ignore-ssl Ignore SSL certificate validation -i/--ignore-ssl Ignore SSL certificate validation -u/--user USER Faraday user -p/--password PASSWORD Faraday password Faraday token expiration You may want to change the faraday token expiration time, so you don't have to authenticate so often. The default is 12 hours. To do it change de value of api_token_expiration (expressed in seconds) in your faraday server.ini status \u00b6 Show the status of your current authentication. $ faraday-cli status FARADAY SERVER IGNORE SSL VERSION USER VALID TOKEN WORKSPACE --------------------- ------------ --------- ------- ------------- ----------- http://localhost:5985 False corp-3.14 faraday \u2714 test Optional Arguments: Syntax Description -p/--pretty Show table in a pretty format Workspaces \u00b6 list workspaces \u00b6 List workspaces created in faraday. $ faraday-cli workspace list -p +--------+---------+------------+---------+----------+----------+------------+ | NAME | HOSTS | SERVICES | VULNS | ACTIVE | PUBLIC | READONLY | |--------+---------+------------+---------+----------+----------+------------| | test | 13 | 13 | 39 | True | False | False | +--------+---------+------------+---------+----------+----------+------------+ Optional Arguments: Syntax Description -j/--json-output Show output in json -p/--pretty Show table in a pretty format --show-inactive Include inactive workspaces delete workspace \u00b6 Delete workspace from faraday. $ faraday-cli workspace delete test Deleting workspace: test Deleted workspace: test Required Arguments: Syntax Description WORKSPACE_NAME Workspace name get workspace \u00b6 Get details of a workspace. $ faraday-cli workspace get -p test +--------+----------+----------+------------+---------+------------+---------+ | NAME | ACTIVE | PUBLIC | READONLY | HOSTS | SERVICES | VULNS | |--------+----------+----------+------------+---------+------------+---------| | test | True | False | False | 13 | 13 | 39 | +--------+----------+----------+------------+---------+------------+---------+ Required Arguments: Syntax Description WORKSPACE_NAME Workspace name Optional Arguments: Syntax Description -j/--json-output Show output in json -p/--pretty Show table in a pretty format select workspace \u00b6 Select your active workspace, unless you use the -w argument all the commands will use this workspace. $ faraday-cli workspace select test \u2714 Selected workspace: test Required Arguments: Syntax Description WORKSPACE_NAME Workspace name create workspace \u00b6 Create a new workspace in faraday. $ faraday-cli workspace create test_workspace \u2714 Created workspace: test_workspace Required Arguments: Syntax Description WORKSPACE_NAME Workspace name Optional Arguments: Syntax Description -d/--dont-select Dont select after create workspaces dashboard \u00b6 Show a dashboard with different information about the workspaces. $ faraday-cli workspace dashboard +--------------+----------------------------+---------------+--------------+------------------------------------------------------------------------------------------------+ | WORKSPACE | INFO | SUMMARY | SEVERITIES | ACTIVITY | +==============+============================+===============+==============+================================================================================================+ | faraday_test | users: - | hosts: 56 | critical: 0 | Nmap (shell) found 1 hosts, 7 services and 0 vulns (0/0/0/0/0) 2 hours ago by faraday | | | readonly: False | services: 221 | high: 0 | Openvas (report) found 13 hosts, 13 services and 39 vulns (0/0/13/26/0) 2 hours ago by faraday | | | public: False | vulns: 52 | med: 13 | agent_firstcan (agent) found 42 hosts, 201 services and 13 vulns (0/0/0/2/11) 3 days ago | | | updated: 06/17/21 15:45:55 | | low: 28 | | | | | | info: 11 | | +--------------+----------------------------+---------------+--------------+------------------------------------------------------------------------------------------------+ Hosts \u00b6 list hosts \u00b6 List hosts in a workspace. $ faraday-cli host list -p +------+------------+---------+-------------+------------+---------+ | ID | IP | OS | HOSTNAMES | SERVICES | VULNS | |------+------------+---------+-------------+------------+---------| | 11 | 127.0.0.1 | unknown | | 1 | 3 | | 3 | 127.0.0.10 | unknown | | 1 | 3 | | 6 | 127.0.0.11 | unknown | | 1 | 3 | | 5 | 127.0.0.12 | unknown | | 1 | 3 | | 7 | 127.0.0.13 | unknown | | 1 | 3 | | 13 | 127.0.0.2 | unknown | | 1 | 3 | | 2 | 127.0.0.3 | unknown | | 1 | 3 | | 9 | 127.0.0.4 | unknown | | 1 | 3 | | 10 | 127.0.0.5 | unknown | | 1 | 3 | | 4 | 127.0.0.6 | unknown | | 1 | 3 | | 8 | 127.0.0.7 | unknown | | 1 | 3 | | 1 | 127.0.0.8 | unknown | | 1 | 3 | | 12 | 127.0.0.9 | unknown | | 1 | 3 | +------+------------+---------+-------------+------------+---------+ Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json -ip/--list-ip Show ip only --port PORT Listen in port get host \u00b6 Get host information. $ faraday-cli host get 13 -p Host: +------+-----------+---------+-------------+---------+---------+---------+ | ID | IP | OS | HOSTNAMES | OWNER | OWNED | VULNS | |------+-----------+---------+-------------+---------+---------+---------| | 13 | 127.0.0.2 | unknown | | faraday | False | 3 | +------+-----------+---------+-------------+---------+---------+---------+ Services: +------+--------+---------------+------------+--------+-----------+----------+---------+ | ID | NAME | DESCRIPTION | PROTOCOL | PORT | VERSION | STATUS | VULNS | |------+--------+---------------+------------+--------+-----------+----------+---------| | 13 | ssh | | tcp | 22 | unknown | open | 2 | +------+--------+---------------+------------+--------+-----------+----------+---------+ Vulnerabilities: +------+------------------------------------------+------------+----------+-------------+---------+ | ID | NAME | SEVERITY | STATUS | CONFIRMED | TOOL | |------+------------------------------------------+------------+----------+-------------+---------| | 37 | SSH Weak Encryption Algorithms Supported | MED | opened | False | Openvas | | 38 | SSH Weak MAC Algorithms Supported | LOW | opened | False | Openvas | | 39 | TCP timestamps | LOW | opened | False | Openvas | +------+------------------------------------------+------------+----------+-------------+---------+ Requirement Arguments: Syntax Description host_id ID of the host Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json delete host \u00b6 Delete host. $ faraday-cli host delete 13 Host deleted Requirement Arguments: Syntax Description host_id ID of the host Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name create hosts \u00b6 Create hosts. Info You can pass the host data via stdin. $ echo '[{\"ip\": \"1.1.1.5\", \"description\": \"some text\"}]' | faraday-cli host create --stdin Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -d/--host-data HOST_DATA Host data in json format --stdin Read host-data from stdin host data schema : {'type': 'array', 'items': {'type': 'object', 'properties': {'ip': {'type': 'string'}, 'description': {'type': 'string'}, 'hostnames': {'type': 'array'}}, 'required': ['ip', 'description']}} Warning If you pass the host data as an argument it needs to be escaped like this (only in command mode, not in shell mode). $ faraday-cli create hosts -d \\''[{\"ip\": \"stan.local\", \"description\": \"some server\"}]'\\' Services \u00b6 list services \u00b6 List services in a workspace. $ faraday-cli service list -p +------+--------+--------------+------------+--------+------------+--------+---------+ | ID | NAME | SUMMARY | IP | PORT | PROTOCOL | HOST | VULNS | |------+--------+--------------+------------+--------+------------+--------+---------| | 1 | ssh | (22/tcp) ssh | 127.0.0.8 | 22 | tcp | 1 | 2 | | 2 | ssh | (22/tcp) ssh | 127.0.0.3 | 22 | tcp | 2 | 2 | | 3 | ssh | (22/tcp) ssh | 127.0.0.10 | 22 | tcp | 3 | 2 | | 4 | ssh | (22/tcp) ssh | 127.0.0.6 | 22 | tcp | 4 | 2 | | 5 | ssh | (22/tcp) ssh | 127.0.0.12 | 22 | tcp | 5 | 2 | | 6 | ssh | (22/tcp) ssh | 127.0.0.11 | 22 | tcp | 6 | 2 | | 7 | ssh | (22/tcp) ssh | 127.0.0.13 | 22 | tcp | 7 | 2 | | 8 | ssh | (22/tcp) ssh | 127.0.0.7 | 22 | tcp | 8 | 2 | | 9 | ssh | (22/tcp) ssh | 127.0.0.4 | 22 | tcp | 9 | 2 | | 10 | ssh | (22/tcp) ssh | 127.0.0.5 | 22 | tcp | 10 | 2 | | 11 | ssh | (22/tcp) ssh | 127.0.0.1 | 22 | tcp | 11 | 2 | | 12 | ssh | (22/tcp) ssh | 127.0.0.9 | 22 | tcp | 12 | 2 | +------+--------+--------------+------------+--------+------------+--------+---------+ Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json Vulnerabilities \u00b6 list vulns \u00b6 List vulnerabilities in a workspace. $ faraday-cli vuln list -p +------+-----------------------------------------------------------------------------+------------+----------+-------------+--------------------------------------------------+-------------+ | ID | NAME | SEVERITY | STATUS | CONFIRMED | ASSET | HOSTNAMES | |------+-----------------------------------------------------------------------------+------------+----------+-------------+--------------------------------------------------+-------------| | 5200 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.22 [Service - (3389/tcp) msrdp] | qa3app02 | | 5198 | Microsoft Windows Remote Desktop Protocol Server Man-in-the-Middle Weakness | med | opened | False | 10.33.112.22 [Service - (3389/tcp) msrdp] | qa3app02 | | 5120 | SMB Signing Disabled | med | opened | False | 10.33.112.24 [Service - (445/tcp) cifs] | qa3app04 | | 5069 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.25 [Service - (3389/tcp) msrdp] | qa3app05 | | 5034 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.26 [Service - (3389/tcp) msrdp] | qa3app06 | | 5116 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.24 [Service - (3389/tcp) msrdp] | qa3app04 | | 5237 | Microsoft Windows Remote Desktop Protocol Server Man-in-the-Middle Weakness | med | opened | False | 10.33.112.21 [Service - (3389/tcp) msrdp] | qa3app01 | | 5079 | SMB Signing Disabled | med | opened | False | 10.33.112.25 [Service - (445/tcp) cifs] | qa3app05 | | 4997 | SMB Signing Disabled | med | opened | False | 10.33.112.29 [Service - (445/tcp) cifs] | qa3app09 | | 5151 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.23 [Service - (3389/tcp) msrdp] | qa3app03 | | 5239 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.21 [Service - (3389/tcp) msrdp] | qa3app01 | | 5161 | SMB Signing Disabled | med | opened | False | 10.33.112.23 [Service - (445/tcp) cifs] | qa3app03 | | 5235 | Terminal Services Doesn't Use Network Level Authentication (NLA) | med | opened | False | 10.33.112.21 [Service - (3389/tcp) msrdp] | qa3app01 | | 5249 | SMB Signing Disabled | med | opened | False | 10.33.112.21 [Service - (445/tcp) cifs] | qa3app01 | | 4983 | Terminal Services Doesn't Use Network Level Authentication (NLA) | med | opened | False | 10.33.112.29 [Service - (3389/tcp) msrdp] | qa3app09 | | 5067 | Microsoft Windows Remote Desktop Protocol Server Man-in-the-Middle Weakness | med | opened | False | 10.33.112.25 [Service - (3389/tcp) msrdp] | qa3app05 | | 5038 | SMB Signing Disabled | med | opened | False | 10.33.112.26 [Service - (445/tcp) cifs] | qa3app06 | | 4987 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.29 [Service - (3389/tcp) msrdp] | qa3app09 | | 5272 | Ethernet Card Manufacturer Detection | info | opened | False | 10.33.112.21 [Host - ID:72] | qa3app01 | | 5142 | OS Identification | info | opened | False | 10.33.112.24 [Host - ID:69] | qa3app04 | | 5228 | OS Identification | info | opened | False | 10.33.112.22 [Host - ID:71] | qa3app02 | +------+-----------------------------------------------------------------------------+------------+----------+-------------+--------------------------------------------------+-------------+ Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json Vulnerabilities Stats \u00b6 stats \u00b6 Different stats about the vulnerabilities in Faraday. Required Arguments: Syntax Description STAT_TYPE {severity,vulns,date} Type of stat Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name --create-workspace if -w is used and the workspace dont exists, it will create it --ignore-info Ignore informational/unclassified vulnerabilities --severity [SEVERITY [SEVERITY ...]] Filter by severity informational/critical/high/medium/low/unclassified --confirmed Confirmed vulnerabilities Tools and Reports \u00b6 process report \u00b6 Process different tools reports and upload the information into faraday. Info Check our Faraday Plugins repo for information about compatible tools. $ faraday-cli tool report $HOME/Downloads/openvas-report.xml \ud83d\udcc4 Processing Openvas report \u2b06 Sending data to workspace: test \u2714 Done Required Arguments: Syntax Description report_path Path of the report file Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name --create-workspace if -w is used and the workspace dont exists, it will create it --plugin-id PLUGIN_ID Plugin ID (force detection) -j/--json-output Show output in json (dont send it to faraday) --tag-vuln TAG_VULN Tag to add to vulnerabilities --tag-host TAG_HOST Tag to add to hosts --tag-service TAG_SERVICE Tag to add to services run tool \u00b6 Execute a tool and upload the information into faraday. Info Check our Faraday Plugins repo for information about compatible tools. $ faraday-cli tool run \\\"nmap www.exampledomain.com\\\" \ud83d\udcbb Processing Nmap command Starting Nmap 7.80 ( https://nmap.org ) at 2021-02-22 14:13 -03 Nmap scan report for www.exampledomain.com (10.196.205.130) Host is up (0.17s latency). rDNS record for 10.196.205.130: 10.196.205.130.bc.googleusercontent.com Not shown: 996 filtered ports PORT STATE SERVICE 80/tcp open http 443/tcp open https 2222/tcp open EtherNetIP-1 3306/tcp closed mysql Nmap done: 1 IP address (1 host up) scanned in 11.12 seconds \u2b06 Sending data to workspace: test \u2714 Done Required Arguments: Syntax Description command Command of the tool to process Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name --plugin-id PLUGIN_ID Plugin ID (force detection) -j/--json-output Show output in json (dont send it to faraday) --tag-vuln TAG_VULN Tag to add to vulnerabilities --tag-host TAG_HOST Tag to add to hosts --tag-service TAG_SERVICE Tag to add to services Run tools like a shell in faraday-cli \u00b6 You also can run commands like a shell without the process_tool command. $ faraday-cli ______ __ _________ / ____/___ __________ _____/ /___ ___ __ / ____/ (_) / /_ / __ `/ ___/ __ `/ __ / __ `/ / / / / / / / / / __/ / /_/ / / / /_/ / /_/ / /_/ / /_/ / / /___/ / / /_/ \\__,_/_/ \\__,_/\\__,_/\\__,_/\\__, / \\____/_/_/ /____/ Server: http://localhost:5985 [ws:test]> nmap -sV stan.local \ud83d\udcbb Processing Nmap command Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-11 14:42 -03 Nmap scan report for stan.local (192.168.1.100) Host is up (0.00083s latency). Other addresses for stan.local (not scanned): fe80::c0f:a595:453a:e406 Not shown: 749 closed ports, 243 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.8 (protocol 2.0) 80/tcp open http nginx 1.19.5 88/tcp open kerberos-sec Heimdal Kerberos (server time: 2021-01-11 17:42:14Z) 443/tcp open ssl/http nginx 1.19.5 445/tcp open microsoft-ds? 5432/tcp open postgresql PostgreSQL DB 9.6.0 or later 5900/tcp open vnc Apple remote desktop vnc 9000/tcp open cslistener? Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 125.84 seconds \u2b06 Sending data to workspace: local \u2714 Done [ws:test]> service list ID NAME SUMMARY IP PORT PROTOCOL HOST VULNS ---- ------------ ---------------------------------------------------- -------------- ------ ---------- ------ ------- 27 ssh (22/tcp) ssh (OpenSSH 7.8) 192.168.1.100 22 tcp 28 0 28 http (80/tcp) http (nginx 1.19.5) 192.168.1.100 80 tcp 28 0 29 kerberos-sec (88/tcp) kerberos-sec (Heimdal Kerberos) 192.168.1.100 88 tcp 28 0 30 https (443/tcp) https (nginx 1.19.5) 192.168.1.100 443 tcp 28 0 31 microsoft-ds (445/tcp) microsoft-ds 192.168.1.100 445 tcp 28 0 32 postgresql (5432/tcp) postgresql (PostgreSQL DB 9.6.0 or later) 192.168.1.100 5432 tcp 28 0 33 vnc (5900/tcp) vnc (Apple remote desktop vnc) 192.168.1.100 5900 tcp 28 0 34 cslistener (9000/tcp) cslistener 192.168.1.100 9000 tcp 28 0 Agents \u00b6 Info For these commands you need to have our Faraday Agents configured. list agents \u00b6 List all configured agents for a workspace. $ faraday-cli agent list ID NAME ACTIVE STATUS EXECUTORS ---- ------ -------- -------- ----------- 2 nico True online nmap Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json get_agent \u00b6 Get information of and agent and its executors. $ faraday-cli agent get 2 ID NAME ACTIVE STATUS ---- ------ -------- -------- 2 nico True online Executors: ID NAME PARAMETERS [REQUIRED] ---- ------ ----------------------- 2 nmap target [True] option_pn [False] option_sc [False] option_sv [False] port_list [False] top_ports [False] host_timeout [False] script_timeout [False] Required Arguments: Syntax Description AGENT_ID ID of the Agent Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json run executor \u00b6 Run an executor. Info You can pass the executor parameters via stdin. $ echo '{\"target\": \"www.google.com\"}' | faraday-cli agent run -a 1 -e nmap --stdin If no -p or --stdin argument is provided, then the executor parameters will be asked one by one. You can store the parameters in env variables and will be auto loaded. Example: For the TARGET parameter of the NMAP executor save the variable FARADAY_CLI_EXECUTOR_NMAP_TARGET You can store the parameters in a file and use it as a 'profile' to repeat scans $ cat scan_test.com_nmap.vars FARADAY_CLI_EXECUTOR_NMAP_TARGET=test.com FARADAY_CLI_EXECUTOR_NMAP_OPTION_PN=true FARADAY_CLI_EXECUTOR_NMAP_OPTION_SC=false FARADAY_CLI_EXECUTOR_NMAP_OPTION_SV=true FARADAY_CLI_EXECUTOR_NMAP_PORT_LIST= FARADAY_CLI_EXECUTOR_NMAP_TOP_PORTS= FARADAY_CLI_EXECUTOR_NMAP_HOST_TIMEOUT= FARADAY_CLI_EXECUTOR_NMAP_SCRIPT_TIMEOUT= $ source scan_test.com_nmap.vars && faraday-cli agent run -a 2 -e nmap -w test Running executor: unnamed_agent/nmap Parameters: {\"TARGET\": \"test.com\", \"OPTION_PN\": \"true\", \"OPTION_SC\": \"false\", \"OPTION_SV\": \"true\"} Generated Command: 14 Warning If you pass the executor parameters as an argument it needs to be escaped like this (only in command mode, not in shell mode). $ faraday-cli agent run -a 1 -e nmap -p \\''{\"target\": \"www.google.com\"}'\\' Running executor: unnamed_agent/nmap Parameters: {\"TARGET\": \"www.google.com\"} Generated Command: 13 Required Arguments: Syntax Description -a/--agent-id AGENT_ID ID of the agent -e/--executor-name EXECUTOR_NAME Executor name -p/--executor-params EXECUTOR_PARAMS Executor Params in json Optional Arguments: Syntax Description --stdin Read executor-params from stdin -w WORKSPACE_NAME Workspace name Executive Reports \u00b6 Info These commands only work with the commercial version of Faraday . list executive-reports-templates \u00b6 List the templates available to generate Executive Reports. $ faraday-cli executive_report list-templates -p +------------------------------------------------------------------+-----------+ | NAME | GROUPED | |------------------------------------------------------------------+-----------| | generic_default.docx (generic) (Word) | False | | generic_default.html (generic) (PDF) | False | | group_default.docx (grouped) (Word) | True | | group_default.html (grouped) (PDF) | True | +------------------------------------------------------------------+-----------+ Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format create executive-report \u00b6 Generate an executive report with a given template. $ faraday-cli executive_report create -t \\'\"generic_default.html (generic) (PDF)\"\\' --title title --summary summary --enterprise company -d /tmp/test.pdf --ignore-info Report created: /tmp/test.pdf Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -t/--template TEMPLATE Template --title TITLE Report title --summary SUMMARY Report summary --enterprise ENTERPRISE Enterprise name --confirmed Confirmed vulnerabilities --severity [SEVERITY [SEVERITY ...]] Filter by severity informational/critical/high/medium/low/unclassified --ignore-info Ignore informational/unclassified vulnerabilities -d/--destination DESTINATION Report destination help \u00b6 Using the help command you can get info of any command. $ faraday-cli help -v Documented commands (use 'help -v' for verbose/'help <topic>' for details): Core -------------------------------------------------------------------------------- auth Authenticate with a faraday server exit exit the application. Shorthand: Ctrl-D. status Show Cli status version Faraday cli version Objects -------------------------------------------------------------------------------- agent agent actions executive_report executive_report actions host host actions service service actions tool tool actions vuln vulnerabilities actions workspace workspace actions ... $ faraday-cli help auth usage: auth [-h] [-f FARADAY_URL] [-i] [-u USER] [-p PASSWORD] Authenticate with a faraday server optional arguments: -h, --help show this help message and exit -f FARADAY_URL, --faraday-url FARADAY_URL Faraday server URL -i, --ignore-ssl Ignore SSL verification -u USER, --user USER Faraday user -p PASSWORD, --password PASSWORD Faraday password","title":"Commands"},{"location":"commands/#commands","text":"","title":"Commands"},{"location":"commands/#authentication","text":"","title":"Authentication"},{"location":"commands/#auth","text":"Authenticate with your faraday server. $ faraday-cli auth Faraday url [http://localhost:5985]: http://localhost:5985 User: faraday Password: Saving config \u2714 Authenticated with faraday: http://localhost:5985 Optional arguments: Syntax Description -f/--faraday-url FARADAY_URL url of your faraday server -i/--ignore-ssl Ignore SSL certificate validation -i/--ignore-ssl Ignore SSL certificate validation -u/--user USER Faraday user -p/--password PASSWORD Faraday password Faraday token expiration You may want to change the faraday token expiration time, so you don't have to authenticate so often. The default is 12 hours. To do it change de value of api_token_expiration (expressed in seconds) in your faraday server.ini","title":"auth"},{"location":"commands/#status","text":"Show the status of your current authentication. $ faraday-cli status FARADAY SERVER IGNORE SSL VERSION USER VALID TOKEN WORKSPACE --------------------- ------------ --------- ------- ------------- ----------- http://localhost:5985 False corp-3.14 faraday \u2714 test Optional Arguments: Syntax Description -p/--pretty Show table in a pretty format","title":"status"},{"location":"commands/#workspaces","text":"","title":"Workspaces"},{"location":"commands/#list-workspaces","text":"List workspaces created in faraday. $ faraday-cli workspace list -p +--------+---------+------------+---------+----------+----------+------------+ | NAME | HOSTS | SERVICES | VULNS | ACTIVE | PUBLIC | READONLY | |--------+---------+------------+---------+----------+----------+------------| | test | 13 | 13 | 39 | True | False | False | +--------+---------+------------+---------+----------+----------+------------+ Optional Arguments: Syntax Description -j/--json-output Show output in json -p/--pretty Show table in a pretty format --show-inactive Include inactive workspaces","title":"list workspaces"},{"location":"commands/#delete-workspace","text":"Delete workspace from faraday. $ faraday-cli workspace delete test Deleting workspace: test Deleted workspace: test Required Arguments: Syntax Description WORKSPACE_NAME Workspace name","title":"delete workspace"},{"location":"commands/#get-workspace","text":"Get details of a workspace. $ faraday-cli workspace get -p test +--------+----------+----------+------------+---------+------------+---------+ | NAME | ACTIVE | PUBLIC | READONLY | HOSTS | SERVICES | VULNS | |--------+----------+----------+------------+---------+------------+---------| | test | True | False | False | 13 | 13 | 39 | +--------+----------+----------+------------+---------+------------+---------+ Required Arguments: Syntax Description WORKSPACE_NAME Workspace name Optional Arguments: Syntax Description -j/--json-output Show output in json -p/--pretty Show table in a pretty format","title":"get workspace"},{"location":"commands/#select-workspace","text":"Select your active workspace, unless you use the -w argument all the commands will use this workspace. $ faraday-cli workspace select test \u2714 Selected workspace: test Required Arguments: Syntax Description WORKSPACE_NAME Workspace name","title":"select workspace"},{"location":"commands/#create-workspace","text":"Create a new workspace in faraday. $ faraday-cli workspace create test_workspace \u2714 Created workspace: test_workspace Required Arguments: Syntax Description WORKSPACE_NAME Workspace name Optional Arguments: Syntax Description -d/--dont-select Dont select after create","title":"create workspace"},{"location":"commands/#workspaces-dashboard","text":"Show a dashboard with different information about the workspaces. $ faraday-cli workspace dashboard +--------------+----------------------------+---------------+--------------+------------------------------------------------------------------------------------------------+ | WORKSPACE | INFO | SUMMARY | SEVERITIES | ACTIVITY | +==============+============================+===============+==============+================================================================================================+ | faraday_test | users: - | hosts: 56 | critical: 0 | Nmap (shell) found 1 hosts, 7 services and 0 vulns (0/0/0/0/0) 2 hours ago by faraday | | | readonly: False | services: 221 | high: 0 | Openvas (report) found 13 hosts, 13 services and 39 vulns (0/0/13/26/0) 2 hours ago by faraday | | | public: False | vulns: 52 | med: 13 | agent_firstcan (agent) found 42 hosts, 201 services and 13 vulns (0/0/0/2/11) 3 days ago | | | updated: 06/17/21 15:45:55 | | low: 28 | | | | | | info: 11 | | +--------------+----------------------------+---------------+--------------+------------------------------------------------------------------------------------------------+","title":"workspaces dashboard"},{"location":"commands/#hosts","text":"","title":"Hosts"},{"location":"commands/#list-hosts","text":"List hosts in a workspace. $ faraday-cli host list -p +------+------------+---------+-------------+------------+---------+ | ID | IP | OS | HOSTNAMES | SERVICES | VULNS | |------+------------+---------+-------------+------------+---------| | 11 | 127.0.0.1 | unknown | | 1 | 3 | | 3 | 127.0.0.10 | unknown | | 1 | 3 | | 6 | 127.0.0.11 | unknown | | 1 | 3 | | 5 | 127.0.0.12 | unknown | | 1 | 3 | | 7 | 127.0.0.13 | unknown | | 1 | 3 | | 13 | 127.0.0.2 | unknown | | 1 | 3 | | 2 | 127.0.0.3 | unknown | | 1 | 3 | | 9 | 127.0.0.4 | unknown | | 1 | 3 | | 10 | 127.0.0.5 | unknown | | 1 | 3 | | 4 | 127.0.0.6 | unknown | | 1 | 3 | | 8 | 127.0.0.7 | unknown | | 1 | 3 | | 1 | 127.0.0.8 | unknown | | 1 | 3 | | 12 | 127.0.0.9 | unknown | | 1 | 3 | +------+------------+---------+-------------+------------+---------+ Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json -ip/--list-ip Show ip only --port PORT Listen in port","title":"list hosts"},{"location":"commands/#get-host","text":"Get host information. $ faraday-cli host get 13 -p Host: +------+-----------+---------+-------------+---------+---------+---------+ | ID | IP | OS | HOSTNAMES | OWNER | OWNED | VULNS | |------+-----------+---------+-------------+---------+---------+---------| | 13 | 127.0.0.2 | unknown | | faraday | False | 3 | +------+-----------+---------+-------------+---------+---------+---------+ Services: +------+--------+---------------+------------+--------+-----------+----------+---------+ | ID | NAME | DESCRIPTION | PROTOCOL | PORT | VERSION | STATUS | VULNS | |------+--------+---------------+------------+--------+-----------+----------+---------| | 13 | ssh | | tcp | 22 | unknown | open | 2 | +------+--------+---------------+------------+--------+-----------+----------+---------+ Vulnerabilities: +------+------------------------------------------+------------+----------+-------------+---------+ | ID | NAME | SEVERITY | STATUS | CONFIRMED | TOOL | |------+------------------------------------------+------------+----------+-------------+---------| | 37 | SSH Weak Encryption Algorithms Supported | MED | opened | False | Openvas | | 38 | SSH Weak MAC Algorithms Supported | LOW | opened | False | Openvas | | 39 | TCP timestamps | LOW | opened | False | Openvas | +------+------------------------------------------+------------+----------+-------------+---------+ Requirement Arguments: Syntax Description host_id ID of the host Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json","title":"get host"},{"location":"commands/#delete-host","text":"Delete host. $ faraday-cli host delete 13 Host deleted Requirement Arguments: Syntax Description host_id ID of the host Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name","title":"delete host"},{"location":"commands/#create-hosts","text":"Create hosts. Info You can pass the host data via stdin. $ echo '[{\"ip\": \"1.1.1.5\", \"description\": \"some text\"}]' | faraday-cli host create --stdin Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -d/--host-data HOST_DATA Host data in json format --stdin Read host-data from stdin host data schema : {'type': 'array', 'items': {'type': 'object', 'properties': {'ip': {'type': 'string'}, 'description': {'type': 'string'}, 'hostnames': {'type': 'array'}}, 'required': ['ip', 'description']}} Warning If you pass the host data as an argument it needs to be escaped like this (only in command mode, not in shell mode). $ faraday-cli create hosts -d \\''[{\"ip\": \"stan.local\", \"description\": \"some server\"}]'\\'","title":"create hosts"},{"location":"commands/#services","text":"","title":"Services"},{"location":"commands/#list-services","text":"List services in a workspace. $ faraday-cli service list -p +------+--------+--------------+------------+--------+------------+--------+---------+ | ID | NAME | SUMMARY | IP | PORT | PROTOCOL | HOST | VULNS | |------+--------+--------------+------------+--------+------------+--------+---------| | 1 | ssh | (22/tcp) ssh | 127.0.0.8 | 22 | tcp | 1 | 2 | | 2 | ssh | (22/tcp) ssh | 127.0.0.3 | 22 | tcp | 2 | 2 | | 3 | ssh | (22/tcp) ssh | 127.0.0.10 | 22 | tcp | 3 | 2 | | 4 | ssh | (22/tcp) ssh | 127.0.0.6 | 22 | tcp | 4 | 2 | | 5 | ssh | (22/tcp) ssh | 127.0.0.12 | 22 | tcp | 5 | 2 | | 6 | ssh | (22/tcp) ssh | 127.0.0.11 | 22 | tcp | 6 | 2 | | 7 | ssh | (22/tcp) ssh | 127.0.0.13 | 22 | tcp | 7 | 2 | | 8 | ssh | (22/tcp) ssh | 127.0.0.7 | 22 | tcp | 8 | 2 | | 9 | ssh | (22/tcp) ssh | 127.0.0.4 | 22 | tcp | 9 | 2 | | 10 | ssh | (22/tcp) ssh | 127.0.0.5 | 22 | tcp | 10 | 2 | | 11 | ssh | (22/tcp) ssh | 127.0.0.1 | 22 | tcp | 11 | 2 | | 12 | ssh | (22/tcp) ssh | 127.0.0.9 | 22 | tcp | 12 | 2 | +------+--------+--------------+------------+--------+------------+--------+---------+ Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json","title":"list services"},{"location":"commands/#vulnerabilities","text":"","title":"Vulnerabilities"},{"location":"commands/#list-vulns","text":"List vulnerabilities in a workspace. $ faraday-cli vuln list -p +------+-----------------------------------------------------------------------------+------------+----------+-------------+--------------------------------------------------+-------------+ | ID | NAME | SEVERITY | STATUS | CONFIRMED | ASSET | HOSTNAMES | |------+-----------------------------------------------------------------------------+------------+----------+-------------+--------------------------------------------------+-------------| | 5200 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.22 [Service - (3389/tcp) msrdp] | qa3app02 | | 5198 | Microsoft Windows Remote Desktop Protocol Server Man-in-the-Middle Weakness | med | opened | False | 10.33.112.22 [Service - (3389/tcp) msrdp] | qa3app02 | | 5120 | SMB Signing Disabled | med | opened | False | 10.33.112.24 [Service - (445/tcp) cifs] | qa3app04 | | 5069 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.25 [Service - (3389/tcp) msrdp] | qa3app05 | | 5034 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.26 [Service - (3389/tcp) msrdp] | qa3app06 | | 5116 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.24 [Service - (3389/tcp) msrdp] | qa3app04 | | 5237 | Microsoft Windows Remote Desktop Protocol Server Man-in-the-Middle Weakness | med | opened | False | 10.33.112.21 [Service - (3389/tcp) msrdp] | qa3app01 | | 5079 | SMB Signing Disabled | med | opened | False | 10.33.112.25 [Service - (445/tcp) cifs] | qa3app05 | | 4997 | SMB Signing Disabled | med | opened | False | 10.33.112.29 [Service - (445/tcp) cifs] | qa3app09 | | 5151 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.23 [Service - (3389/tcp) msrdp] | qa3app03 | | 5239 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.21 [Service - (3389/tcp) msrdp] | qa3app01 | | 5161 | SMB Signing Disabled | med | opened | False | 10.33.112.23 [Service - (445/tcp) cifs] | qa3app03 | | 5235 | Terminal Services Doesn't Use Network Level Authentication (NLA) | med | opened | False | 10.33.112.21 [Service - (3389/tcp) msrdp] | qa3app01 | | 5249 | SMB Signing Disabled | med | opened | False | 10.33.112.21 [Service - (445/tcp) cifs] | qa3app01 | | 4983 | Terminal Services Doesn't Use Network Level Authentication (NLA) | med | opened | False | 10.33.112.29 [Service - (3389/tcp) msrdp] | qa3app09 | | 5067 | Microsoft Windows Remote Desktop Protocol Server Man-in-the-Middle Weakness | med | opened | False | 10.33.112.25 [Service - (3389/tcp) msrdp] | qa3app05 | | 5038 | SMB Signing Disabled | med | opened | False | 10.33.112.26 [Service - (445/tcp) cifs] | qa3app06 | | 4987 | Terminal Services Encryption Level is Medium or Low | med | opened | False | 10.33.112.29 [Service - (3389/tcp) msrdp] | qa3app09 | | 5272 | Ethernet Card Manufacturer Detection | info | opened | False | 10.33.112.21 [Host - ID:72] | qa3app01 | | 5142 | OS Identification | info | opened | False | 10.33.112.24 [Host - ID:69] | qa3app04 | | 5228 | OS Identification | info | opened | False | 10.33.112.22 [Host - ID:71] | qa3app02 | +------+-----------------------------------------------------------------------------+------------+----------+-------------+--------------------------------------------------+-------------+ Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json","title":"list vulns"},{"location":"commands/#vulnerabilities-stats","text":"","title":"Vulnerabilities Stats"},{"location":"commands/#stats","text":"Different stats about the vulnerabilities in Faraday. Required Arguments: Syntax Description STAT_TYPE {severity,vulns,date} Type of stat Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name --create-workspace if -w is used and the workspace dont exists, it will create it --ignore-info Ignore informational/unclassified vulnerabilities --severity [SEVERITY [SEVERITY ...]] Filter by severity informational/critical/high/medium/low/unclassified --confirmed Confirmed vulnerabilities","title":"stats"},{"location":"commands/#tools-and-reports","text":"","title":"Tools and Reports"},{"location":"commands/#process-report","text":"Process different tools reports and upload the information into faraday. Info Check our Faraday Plugins repo for information about compatible tools. $ faraday-cli tool report $HOME/Downloads/openvas-report.xml \ud83d\udcc4 Processing Openvas report \u2b06 Sending data to workspace: test \u2714 Done Required Arguments: Syntax Description report_path Path of the report file Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name --create-workspace if -w is used and the workspace dont exists, it will create it --plugin-id PLUGIN_ID Plugin ID (force detection) -j/--json-output Show output in json (dont send it to faraday) --tag-vuln TAG_VULN Tag to add to vulnerabilities --tag-host TAG_HOST Tag to add to hosts --tag-service TAG_SERVICE Tag to add to services","title":"process report"},{"location":"commands/#run-tool","text":"Execute a tool and upload the information into faraday. Info Check our Faraday Plugins repo for information about compatible tools. $ faraday-cli tool run \\\"nmap www.exampledomain.com\\\" \ud83d\udcbb Processing Nmap command Starting Nmap 7.80 ( https://nmap.org ) at 2021-02-22 14:13 -03 Nmap scan report for www.exampledomain.com (10.196.205.130) Host is up (0.17s latency). rDNS record for 10.196.205.130: 10.196.205.130.bc.googleusercontent.com Not shown: 996 filtered ports PORT STATE SERVICE 80/tcp open http 443/tcp open https 2222/tcp open EtherNetIP-1 3306/tcp closed mysql Nmap done: 1 IP address (1 host up) scanned in 11.12 seconds \u2b06 Sending data to workspace: test \u2714 Done Required Arguments: Syntax Description command Command of the tool to process Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name --plugin-id PLUGIN_ID Plugin ID (force detection) -j/--json-output Show output in json (dont send it to faraday) --tag-vuln TAG_VULN Tag to add to vulnerabilities --tag-host TAG_HOST Tag to add to hosts --tag-service TAG_SERVICE Tag to add to services","title":"run tool"},{"location":"commands/#run-tools-like-a-shell-in-faraday-cli","text":"You also can run commands like a shell without the process_tool command. $ faraday-cli ______ __ _________ / ____/___ __________ _____/ /___ ___ __ / ____/ (_) / /_ / __ `/ ___/ __ `/ __ / __ `/ / / / / / / / / / __/ / /_/ / / / /_/ / /_/ / /_/ / /_/ / / /___/ / / /_/ \\__,_/_/ \\__,_/\\__,_/\\__,_/\\__, / \\____/_/_/ /____/ Server: http://localhost:5985 [ws:test]> nmap -sV stan.local \ud83d\udcbb Processing Nmap command Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-11 14:42 -03 Nmap scan report for stan.local (192.168.1.100) Host is up (0.00083s latency). Other addresses for stan.local (not scanned): fe80::c0f:a595:453a:e406 Not shown: 749 closed ports, 243 filtered ports PORT STATE SERVICE VERSION 22/tcp open ssh OpenSSH 7.8 (protocol 2.0) 80/tcp open http nginx 1.19.5 88/tcp open kerberos-sec Heimdal Kerberos (server time: 2021-01-11 17:42:14Z) 443/tcp open ssl/http nginx 1.19.5 445/tcp open microsoft-ds? 5432/tcp open postgresql PostgreSQL DB 9.6.0 or later 5900/tcp open vnc Apple remote desktop vnc 9000/tcp open cslistener? Service detection performed. Please report any incorrect results at https://nmap.org/submit/ . Nmap done: 1 IP address (1 host up) scanned in 125.84 seconds \u2b06 Sending data to workspace: local \u2714 Done [ws:test]> service list ID NAME SUMMARY IP PORT PROTOCOL HOST VULNS ---- ------------ ---------------------------------------------------- -------------- ------ ---------- ------ ------- 27 ssh (22/tcp) ssh (OpenSSH 7.8) 192.168.1.100 22 tcp 28 0 28 http (80/tcp) http (nginx 1.19.5) 192.168.1.100 80 tcp 28 0 29 kerberos-sec (88/tcp) kerberos-sec (Heimdal Kerberos) 192.168.1.100 88 tcp 28 0 30 https (443/tcp) https (nginx 1.19.5) 192.168.1.100 443 tcp 28 0 31 microsoft-ds (445/tcp) microsoft-ds 192.168.1.100 445 tcp 28 0 32 postgresql (5432/tcp) postgresql (PostgreSQL DB 9.6.0 or later) 192.168.1.100 5432 tcp 28 0 33 vnc (5900/tcp) vnc (Apple remote desktop vnc) 192.168.1.100 5900 tcp 28 0 34 cslistener (9000/tcp) cslistener 192.168.1.100 9000 tcp 28 0","title":"Run tools like a shell in faraday-cli"},{"location":"commands/#agents","text":"Info For these commands you need to have our Faraday Agents configured.","title":"Agents"},{"location":"commands/#list-agents","text":"List all configured agents for a workspace. $ faraday-cli agent list ID NAME ACTIVE STATUS EXECUTORS ---- ------ -------- -------- ----------- 2 nico True online nmap Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json","title":"list agents"},{"location":"commands/#get_agent","text":"Get information of and agent and its executors. $ faraday-cli agent get 2 ID NAME ACTIVE STATUS ---- ------ -------- -------- 2 nico True online Executors: ID NAME PARAMETERS [REQUIRED] ---- ------ ----------------------- 2 nmap target [True] option_pn [False] option_sc [False] option_sv [False] port_list [False] top_ports [False] host_timeout [False] script_timeout [False] Required Arguments: Syntax Description AGENT_ID ID of the Agent Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format -j/--json-output Show output in json","title":"get_agent"},{"location":"commands/#run-executor","text":"Run an executor. Info You can pass the executor parameters via stdin. $ echo '{\"target\": \"www.google.com\"}' | faraday-cli agent run -a 1 -e nmap --stdin If no -p or --stdin argument is provided, then the executor parameters will be asked one by one. You can store the parameters in env variables and will be auto loaded. Example: For the TARGET parameter of the NMAP executor save the variable FARADAY_CLI_EXECUTOR_NMAP_TARGET You can store the parameters in a file and use it as a 'profile' to repeat scans $ cat scan_test.com_nmap.vars FARADAY_CLI_EXECUTOR_NMAP_TARGET=test.com FARADAY_CLI_EXECUTOR_NMAP_OPTION_PN=true FARADAY_CLI_EXECUTOR_NMAP_OPTION_SC=false FARADAY_CLI_EXECUTOR_NMAP_OPTION_SV=true FARADAY_CLI_EXECUTOR_NMAP_PORT_LIST= FARADAY_CLI_EXECUTOR_NMAP_TOP_PORTS= FARADAY_CLI_EXECUTOR_NMAP_HOST_TIMEOUT= FARADAY_CLI_EXECUTOR_NMAP_SCRIPT_TIMEOUT= $ source scan_test.com_nmap.vars && faraday-cli agent run -a 2 -e nmap -w test Running executor: unnamed_agent/nmap Parameters: {\"TARGET\": \"test.com\", \"OPTION_PN\": \"true\", \"OPTION_SC\": \"false\", \"OPTION_SV\": \"true\"} Generated Command: 14 Warning If you pass the executor parameters as an argument it needs to be escaped like this (only in command mode, not in shell mode). $ faraday-cli agent run -a 1 -e nmap -p \\''{\"target\": \"www.google.com\"}'\\' Running executor: unnamed_agent/nmap Parameters: {\"TARGET\": \"www.google.com\"} Generated Command: 13 Required Arguments: Syntax Description -a/--agent-id AGENT_ID ID of the agent -e/--executor-name EXECUTOR_NAME Executor name -p/--executor-params EXECUTOR_PARAMS Executor Params in json Optional Arguments: Syntax Description --stdin Read executor-params from stdin -w WORKSPACE_NAME Workspace name","title":"run executor"},{"location":"commands/#executive-reports","text":"Info These commands only work with the commercial version of Faraday .","title":"Executive Reports"},{"location":"commands/#list-executive-reports-templates","text":"List the templates available to generate Executive Reports. $ faraday-cli executive_report list-templates -p +------------------------------------------------------------------+-----------+ | NAME | GROUPED | |------------------------------------------------------------------+-----------| | generic_default.docx (generic) (Word) | False | | generic_default.html (generic) (PDF) | False | | group_default.docx (grouped) (Word) | True | | group_default.html (grouped) (PDF) | True | +------------------------------------------------------------------+-----------+ Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -p/--pretty Show table in a pretty format","title":"list executive-reports-templates"},{"location":"commands/#create-executive-report","text":"Generate an executive report with a given template. $ faraday-cli executive_report create -t \\'\"generic_default.html (generic) (PDF)\"\\' --title title --summary summary --enterprise company -d /tmp/test.pdf --ignore-info Report created: /tmp/test.pdf Optional Arguments: Syntax Description -w WORKSPACE_NAME Workspace name -t/--template TEMPLATE Template --title TITLE Report title --summary SUMMARY Report summary --enterprise ENTERPRISE Enterprise name --confirmed Confirmed vulnerabilities --severity [SEVERITY [SEVERITY ...]] Filter by severity informational/critical/high/medium/low/unclassified --ignore-info Ignore informational/unclassified vulnerabilities -d/--destination DESTINATION Report destination","title":"create executive-report"},{"location":"commands/#help","text":"Using the help command you can get info of any command. $ faraday-cli help -v Documented commands (use 'help -v' for verbose/'help <topic>' for details): Core -------------------------------------------------------------------------------- auth Authenticate with a faraday server exit exit the application. Shorthand: Ctrl-D. status Show Cli status version Faraday cli version Objects -------------------------------------------------------------------------------- agent agent actions executive_report executive_report actions host host actions service service actions tool tool actions vuln vulnerabilities actions workspace workspace actions ... $ faraday-cli help auth usage: auth [-h] [-f FARADAY_URL] [-i] [-u USER] [-p PASSWORD] Authenticate with a faraday server optional arguments: -h, --help show this help message and exit -f FARADAY_URL, --faraday-url FARADAY_URL Faraday server URL -i, --ignore-ssl Ignore SSL verification -u USER, --user USER Faraday user -p PASSWORD, --password PASSWORD Faraday password","title":"help"},{"location":"getting_started/","text":"Installation Instructions \u00b6 Install \u00b6 pip $ pip install faraday-cli git $ git clone https://github.com/infobyte/faraday-cli.git $ cd faraday-cli $ pip install . Python version Python 3.7 and up required. Using Faraday Cli \u00b6 Authenticate with your Faraday server \u00b6 $ faraday-cli auth Faraday url [http://localhost:5985]: User: faraday Password: Saving config \u2714 Authenticated with faraday: http://localhost:5985 Select an active Workspace \u00b6 $ faraday-cli select workspace test \u2714 Selected workspace: test Now load information into faraday \u00b6 Process reports from any of the many tools we support \u00b6 $ faraday-cli process report /path/to/openvas.xml \ud83d\udcc4 Processing Openvas report \u2b06 Sending data to workspace: test \u2714 Done Or run the tools with the cli \u00b6 Faraday Cli can be used in two ways to do that As individual commands As a shell As commands \u00b6 Every faraday cli command can be used as an individual command from the command line. This is useful when integrating faraday cli to batch process, scripts or pipelines. $ faraday-cli tool run \\\"nmap localhost\\\" \ud83d\udcbb Processing Nmap command Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-14 13:34 -03 Nmap scan report for localhost (127.0.0.1) Host is up (0.0010s latency). Other addresses for localhost (not scanned): ::1 Not shown: 500 closed ports, 490 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 88/tcp open kerberos-sec 443/tcp open https 445/tcp open microsoft-ds 5432/tcp open postgresql 5900/tcp open vnc 8000/tcp open http-alt 9000/tcp open cslistener 49156/tcp open unknown Nmap done: 1 IP address (1 host up) scanned in 2.55 seconds \u2b06 Sending data to workspace: test \u2714 Done As a shell \u00b6 It also can be used as a shell and run any command in the same instance. $ faraday-cli ______ __ _________ / ____/___ __________ _____/ /___ ___ __ / ____/ (_) / /_ / __ `/ ___/ __ `/ __ / __ `/ / / / / / / / / / __/ / /_/ / / / /_/ / /_/ / /_/ / /_/ / / /___/ / / /_/ \\__,_/_/ \\__,_/\\__,_/\\__,_/\\__, / \\____/_/_/ /____/ Server: http://localhost:5985 [ws:test]> nmap localhost \ud83d\udcbb Processing Nmap command Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-14 13:34 -03 Nmap scan report for localhost (127.0.0.1) Host is up (0.00026s latency). Other addresses for localhost (not scanned): ::1 Not shown: 961 closed ports, 29 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 88/tcp open kerberos-sec 443/tcp open https 445/tcp open microsoft-ds 5432/tcp open postgresql 5900/tcp open vnc 8000/tcp open http-alt 9000/tcp open cslistener 49156/tcp open unknown Nmap done: 1 IP address (1 host up) scanned in 5.45 seconds \u2b06 Sending data to workspace: test \u2714 Done [ws:test]> Info For more information check out our commands section. Change settings \u00b6 You can change some settings from the cli itself. custom_plugins_path (Path where the cli will look for custom plugins) ignore_info_severity (If set to True the cli will ignore all INFORMATIONAL vulnerabilities) [DEFAULT: False] $ faraday-cli ______ __ _________ / ____/___ __________ _____/ /___ ___ __ / ____/ (_) / /_ / __ `/ ___/ __ `/ __ / __ `/ / / / / / / / / / __/ / /_/ / / / /_/ / /_/ / /_/ / /_/ / / /___/ / / /_/ \\__,_/_/ \\__,_/\\__,_/\\__,_/\\__, / \\____/_/_/ /____/ Server: http://localhost:5985 [ws:test]> set ignore_info_severity true ignore_info_severity - was: False now: True [ws:test]>","title":"Getting started"},{"location":"getting_started/#installation-instructions","text":"","title":"Installation Instructions"},{"location":"getting_started/#install","text":"pip $ pip install faraday-cli git $ git clone https://github.com/infobyte/faraday-cli.git $ cd faraday-cli $ pip install . Python version Python 3.7 and up required.","title":"Install"},{"location":"getting_started/#using-faraday-cli","text":"","title":"Using Faraday Cli"},{"location":"getting_started/#authenticate-with-your-faraday-server","text":"$ faraday-cli auth Faraday url [http://localhost:5985]: User: faraday Password: Saving config \u2714 Authenticated with faraday: http://localhost:5985","title":"Authenticate with your Faraday server"},{"location":"getting_started/#select-an-active-workspace","text":"$ faraday-cli select workspace test \u2714 Selected workspace: test","title":"Select an active Workspace"},{"location":"getting_started/#now-load-information-into-faraday","text":"","title":"Now load information into faraday"},{"location":"getting_started/#process-reports-from-any-of-the-many-tools-we-support","text":"$ faraday-cli process report /path/to/openvas.xml \ud83d\udcc4 Processing Openvas report \u2b06 Sending data to workspace: test \u2714 Done","title":"Process reports from any of the many tools we support"},{"location":"getting_started/#or-run-the-tools-with-the-cli","text":"Faraday Cli can be used in two ways to do that As individual commands As a shell","title":"Or run the tools with the cli"},{"location":"getting_started/#as-commands","text":"Every faraday cli command can be used as an individual command from the command line. This is useful when integrating faraday cli to batch process, scripts or pipelines. $ faraday-cli tool run \\\"nmap localhost\\\" \ud83d\udcbb Processing Nmap command Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-14 13:34 -03 Nmap scan report for localhost (127.0.0.1) Host is up (0.0010s latency). Other addresses for localhost (not scanned): ::1 Not shown: 500 closed ports, 490 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 88/tcp open kerberos-sec 443/tcp open https 445/tcp open microsoft-ds 5432/tcp open postgresql 5900/tcp open vnc 8000/tcp open http-alt 9000/tcp open cslistener 49156/tcp open unknown Nmap done: 1 IP address (1 host up) scanned in 2.55 seconds \u2b06 Sending data to workspace: test \u2714 Done","title":"As commands"},{"location":"getting_started/#as-a-shell","text":"It also can be used as a shell and run any command in the same instance. $ faraday-cli ______ __ _________ / ____/___ __________ _____/ /___ ___ __ / ____/ (_) / /_ / __ `/ ___/ __ `/ __ / __ `/ / / / / / / / / / __/ / /_/ / / / /_/ / /_/ / /_/ / /_/ / / /___/ / / /_/ \\__,_/_/ \\__,_/\\__,_/\\__,_/\\__, / \\____/_/_/ /____/ Server: http://localhost:5985 [ws:test]> nmap localhost \ud83d\udcbb Processing Nmap command Starting Nmap 7.80 ( https://nmap.org ) at 2021-01-14 13:34 -03 Nmap scan report for localhost (127.0.0.1) Host is up (0.00026s latency). Other addresses for localhost (not scanned): ::1 Not shown: 961 closed ports, 29 filtered ports PORT STATE SERVICE 22/tcp open ssh 80/tcp open http 88/tcp open kerberos-sec 443/tcp open https 445/tcp open microsoft-ds 5432/tcp open postgresql 5900/tcp open vnc 8000/tcp open http-alt 9000/tcp open cslistener 49156/tcp open unknown Nmap done: 1 IP address (1 host up) scanned in 5.45 seconds \u2b06 Sending data to workspace: test \u2714 Done [ws:test]> Info For more information check out our commands section.","title":"As a shell"},{"location":"getting_started/#change-settings","text":"You can change some settings from the cli itself. custom_plugins_path (Path where the cli will look for custom plugins) ignore_info_severity (If set to True the cli will ignore all INFORMATIONAL vulnerabilities) [DEFAULT: False] $ faraday-cli ______ __ _________ / ____/___ __________ _____/ /___ ___ __ / ____/ (_) / /_ / __ `/ ___/ __ `/ __ / __ `/ / / / / / / / / / __/ / /_/ / / / /_/ / /_/ / /_/ / /_/ / / /___/ / / /_/ \\__,_/_/ \\__,_/\\__,_/\\__,_/\\__, / \\____/_/_/ /____/ Server: http://localhost:5985 [ws:test]> set ignore_info_severity true ignore_info_severity - was: False now: True [ws:test]>","title":"Change settings"}]}